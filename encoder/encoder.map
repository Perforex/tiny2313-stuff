Archive member included because of file (symbol)

../attiny2313libs/debounce/libdebounce.a(debounce.o)
                              encoder.o (debounce)
/usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
                              encoder.o (__udivmodhi4)
/usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o (exit)
/usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
                              encoder.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              encoder.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

currentDuty         0x2               encoder.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o
LOAD encoder.o
LOAD ../attiny2313libs/debounce/libdebounce.a
LOAD /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x224
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002e       0x16 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
                0x000000000000002e                __do_copy_data
 .init4         0x0000000000000044       0x10 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000044                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000054        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x0000000000000058        0x2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o
                0x0000000000000058                __vector_12
                0x0000000000000058                __bad_interrupt
                0x0000000000000058                __vector_6
                0x0000000000000058                __vector_3
                0x0000000000000058                __vector_11
                0x0000000000000058                __vector_13
                0x0000000000000058                __vector_17
                0x0000000000000058                __vector_7
                0x0000000000000058                __vector_5
                0x0000000000000058                __vector_4
                0x0000000000000058                __vector_9
                0x0000000000000058                __vector_2
                0x0000000000000058                __vector_15
                0x0000000000000058                __vector_8
                0x0000000000000058                __vector_14
                0x0000000000000058                __vector_10
                0x0000000000000058                __vector_16
                0x0000000000000058                __vector_18
 .text          0x000000000000005a       0xca encoder.o
                0x000000000000005a                encoder
                0x00000000000000d6                __vector_1
 .text          0x0000000000000124       0x22 ../attiny2313libs/debounce/libdebounce.a(debounce.o)
                0x0000000000000124                debounce
 .text          0x0000000000000146        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000146        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x0000000000000146        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text          0x0000000000000146        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000146                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000146       0xb2 encoder.o
                0x0000000000000146                main
 .text.libgcc.mul
                0x00000000000001f8        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000000001f8       0x28 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
                0x00000000000001f8                __udivmodhi4
 .text.libgcc   0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x0000000000000220                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000220        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
                0x0000000000000220                exit
                0x0000000000000220                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000220        0x4 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000224                _etext = .

.data           0x0000000000800060        0x8 load address 0x0000000000000224
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o
 .data          0x0000000000800060        0x7 encoder.o
                0x0000000000800060                currentFreq
                0x0000000000800062                maxDutyValue
                0x0000000000800064                precision
 .data          0x0000000000800067        0x0 ../attiny2313libs/debounce/libdebounce.a(debounce.o)
 .data          0x0000000000800067        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800067        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800067        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .data          0x0000000000800067        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800068                . = ALIGN (0x2)
 *fill*         0x0000000000800067        0x1 00
                0x0000000000800068                _edata = .
                0x0000000000800068                PROVIDE (__data_end, .)

.bss            0x0000000000800068        0x5
                0x0000000000800068                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800068        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o
 .bss           0x0000000000800068        0x3 encoder.o
                0x0000000000800068                On
                0x0000000000800069                buttonPress
 .bss           0x000000000080006b        0x0 ../attiny2313libs/debounce/libdebounce.a(debounce.o)
 .bss           0x000000000080006b        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080006b        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x000000000080006b        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .bss           0x000000000080006b        0x0 /usr/lib/gcc/avr/4.7.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080006b        0x2 encoder.o
                0x000000000080006b                currentDuty
                0x000000000080006d                PROVIDE (__bss_end, .)
                0x0000000000000224                __data_load_start = LOADADDR (.data)
                0x000000000000022c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080006d        0x0
                0x000000000080006d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080006d                PROVIDE (__noinit_end, .)
                0x000000000080006d                _end = .
                0x000000000080006d                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xd74
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o
 .stab          0x00000000000006b4      0x6c0 encoder.o
                                        0x6cc (size before relaxing)

.stabstr        0x0000000000000000      0x9c2
 *(.stabstr)
 .stabstr       0x0000000000000000      0x9c2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 encoder.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(encoder.elf elf32-avr)
LOAD linker stubs
